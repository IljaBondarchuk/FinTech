plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'checkstyle'
	id 'pmd'
	id 'jacoco'
	id 'org.liquibase.gradle' version '2.2.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'net.lbruun.springboot:preliquibase-spring-boot-starter:1.4.0'
	implementation 'org.liquibase:liquibase-core'
	implementation "org.mapstruct:mapstruct:1.5.5.Final"
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final", "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
	testImplementation 'org.testcontainers:junit-jupiter:1.18.3'
	testImplementation 'org.testcontainers:mysql:1.17.6'
}

tasks.named('test') {
	useJUnitPlatform()
}

checkstyle {
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

checkstyleMain {
	source = 'src/main/java'
}

checkstyleTest {
	source = 'src/test/java'
}

pmd {
	toolVersion = "6.23.0"
	ruleSetFiles = files("config/pmd/pmd.xml")
	ruleSets = []
}

apply plugin: 'jacoco'
test.finalizedBy jacocoTestReport

liquibase {
	activities {
		main {
			changeLogFile 'changelog-master.xml'
			url 'jdbc:mysql://localhost:3308/fintech'
			username 'root'
			password '1234'
		}
	}
}